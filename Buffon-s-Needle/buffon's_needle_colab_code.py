# -*- coding: utf-8 -*-
"""Buffon's_needle_colab_code.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1hATabH7gYN2d37zGoh5vp1LToq0BkKdl

# ***Library import***
"""

import math
import numpy as np
import matplotlib.pyplot as plt

trial_list = [500,1000,5000]
for i in (trial_list):
  print(i)

"""# ***Buffon's needle code***"""

print("Needle length : ")
l= int(input()) #needle length
print("distence between two parallel line")
d= int(input()) # distence between two parallel line

trial_list = [500,1000,5000]
#total_trial_points = 3 #as trial list have only three value
hits = 0



for i in (trial_list):
  print()
  print("Trial value : ",i)
  #for j in range(trial_list):
  hits_theta = []
  hits_D = []
  miss_theta = []
  miss_D = []
  for j in range(i):
    D = np.random.uniform(0,d/2)
    theta = np.random.uniform(0,3.1416) # taking value 0<=theta<=3.1416
    if D<= l/2 * math.sin(theta):
      hits +=1 
      hits_theta.append(theta)
      hits_D.append(D)
    else:
      miss_theta.append(theta)
      miss_D.append(D)
  #pi = ((2*l)/d) * (trial_list[j] / hits)
  pi = ((2*l)/d) * (i/ hits) # i is defined as total tiral 
  print(pi)

  plt.scatter(hits_theta,hits_D,color="red",label="Hit Points")
  plt.scatter(miss_theta,miss_D,color="green",label="Hit Points")
  
  plt.legend()
  plt.show()